<?php
/**
 * Author: super
 * Date: 2020/11/13
 */

namespace app\common\model;

use think\Model;

class Error extends Model
{
    public $pk = 'error_id';

    public static function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * return new static
     * @return static
     */
    public static function mark()
    {
        return new static();
    }

    /**
     * write error
     * @access public
     * @param string $where 报错位置
     * @param mixed $text 报错详情
     * @return int|mixed|string
     */
    public function writeError(string $where, $text)
    {
        if (!is_string($text)) {
            $text = json_encode($text, JSON_UNESCAPED_UNICODE);
        }
        $error = $where . ' ---> ' . $text;
        $exist = self::getOneByWhere([['text', '=', $error]]);
        if ($exist) {
            return self::updateOneByID($exist[$this->pk], ['last_time' => time()]);
        } else {
            return self::insertOne($error);
        }
    }

    /**
     * get one by where
     * @access private
     * @param array $where
     * @return object
     */
    private function getOneByWhere(array $where)
    {
        return $this->where($where)->find();
    }

    /**
     * insert one
     * @access private
     * @param string $error 报错详情
     * @return int|string
     */
    private function insertOne(string $error)
    {
        return $this->insert(['text' => $error, 'time' => time(), 'last_time' => time()]);
    }

    /**
     * update one by ID
     * @access private
     * @param int $id ID
     * @param array $data 数据数组
     * @return int|mixed
     */
    private function updateOneByID(int $id, array $data)
    {
        return $this->where([[$this->pk, '=', $id]])->update($data);
    }

}