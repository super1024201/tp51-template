<?php
/**
 * Author: super
 * Date: 2020/11/13
 */

namespace app\common\model;

use Exception;
use think\Model;
use think\Db;

class Common extends Model
{
    public static function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * return new static
     * @return static
     */
    public static function mark()
    {
        return new static();
    }

    /**
     * get one data by Where
     * @access public
     * @param array $where
     * @param string $field
     * @return object
     */
    public function getOneByWhere($where = [], $field = '*')
    {
        return $this->where($where)->field($field)->find();
    }

    /**
     * get one data by id
     * @access public
     * @param int $id ID值
     * @param string $field 查询字段
     * @return object
     */
    public function getOneByID(int $id, $field = '*')
    {
        return $this::getOneByWhere([[$this->pk, '=', $id]], $field);
    }

    /**
     * get value by id
     * @access public
     * @param int $id ID值
     * @param string $field 查询字段
     * @return mixed
     */
    public function getValueByID(int $id, string $field)
    {
        return $this->where([[$this->pk, '=', $id]])->value($field);
    }

    /**
     * update one data by where
     * @access public
     * @param array $where
     * @param array $data
     * @return int|mixed
     */
    public function updateOneByWhere($where = [], $data = [])
    {
        return $this->where($where)->update($data);
    }

    /**
     * update one data by where
     * @access public
     * @param int $id ID
     * @param array $data 数据数组
     * @return int|mixed
     */
    public function updateOneByID(int $id, array $data = [])
    {
        return $this::updateOneByWhere([[$this->pk, '=', $id]], $data);
    }

    /**
     * 新增一条数据
     * @access public
     * @param array $data 数据数组
     * @return int|string
     */
    public function insertOne(array $data = [])
    {
        return $this->insertGetId($data);
    }

    /**
     * delete one by ID and delete file
     * @access public
     * @param int $id ID
     * @param string|null $file_field 文件字段
     * @return bool
     */
    public function deleteOneByID(int $id, $file_field = null)
    {
        Db::startTrans();
        $delete = $this::deleteOneByWhere([[$this->pk, '=', $id]]);
        if (!$delete) {
            Db::rollback();
            return false;
        }

        if ($file_field) {
            $file_path = $this::getValueByID($id, $file_field);
            if (file_exists('.' . $file_path)) {
                $delete_file = unlink('.' . $file_path);
                if (!$delete_file) {
                    Db::rollback();
                    return false;
                }
            }
        }
        Db::commit();
        return true;
    }

    /**
     * delete one by where
     * @access public
     * @param array $where
     * @return bool
     */
    public function deleteOneByWhere($where = [])
    {
        try {
            return $this->where($where)->delete();
        } catch (Exception $e) {
            Error::mark()->writeError('Common/deleteOneByWhere', $e->getMessage());
            return false;
        }
    }

}